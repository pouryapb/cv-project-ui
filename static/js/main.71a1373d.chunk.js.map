{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["theme","createMuiTheme","palette","type","useStyles","makeStyles","paper","padding","spacing","button","height","filesContainer","formControl","minWidth","selectedFiles","paddingTop","formats","App","classes","useState","format","setFormat","setSelectedFiles","isLoading","setIsLoading","ThemeProvider","CssBaseline","Container","Paper","className","Grid","container","item","xs","md","Button","startIcon","CloudUpload","variant","color","component","accept","hidden","onChange","event","files","Array","from","target","FormControl","InputLabel","id","Select","labelId","value","label","map","index","MenuItem","onClick","formdata","FormData","append","fetch","method","body","then","res","blob","filename","url","window","URL","createObjectURL","a","document","createElement","style","display","href","download","appendChild","click","removeChild","revokeObjectURL","catch","error","console","log","disabled","length","CircularProgress","Typography","file","name","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.71a1373d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Button,\n  CircularProgress,\n  Container,\n  createMuiTheme,\n  CssBaseline,\n  FormControl,\n  Grid,\n  InputLabel,\n  makeStyles,\n  MenuItem,\n  Paper,\n  Select,\n  ThemeProvider,\n  Typography,\n} from \"@material-ui/core\";\nimport { CloudUpload } from \"@material-ui/icons\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(3),\n  },\n  button: {\n    height: \"100%\",\n  },\n  filesContainer: {\n    padding: theme.spacing(2, 0),\n  },\n  formControl: {\n    minWidth: 160,\n  },\n  selectedFiles: {\n    paddingTop: theme.spacing(1),\n  },\n}));\n\nconst formats = [\n  \"jpg\",\n  \"png\",\n  \"gif\",\n  \"bmp\",\n  \"tiff\",\n  \"eps\",\n  \"WebP\",\n  \"svg\",\n  \"pdf\",\n  \"txt\",\n];\n\nfunction App() {\n  const classes = useStyles();\n  const [format, setFormat] = useState(\"jpg\");\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSelect = (event) => {\n    setFormat(event.target.value);\n  };\n\n  const handleFileSelected = (event) => {\n    const files = Array.from(event.target.files);\n    // console.log(\"files:\", files);\n    setSelectedFiles(files);\n  };\n\n  const download = (blob, filename) => {\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.style.display = \"none\";\n    a.href = url;\n    // the filename you want\n    a.download = filename;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n  };\n\n  const handleConvert = (event) => {\n    const formdata = new FormData();\n    formdata.append(\"image\", selectedFiles[0]);\n    formdata.append(\"format\", format);\n\n    setIsLoading(true);\n    fetch(\"https://image-format-converter.herokuapp.com/convert\", {\n      method: \"POST\",\n      body: formdata,\n    })\n      .then((res) => {\n        // console.log(res);\n        res.blob().then((blob) => download(blob, `result.${format}`));\n        setIsLoading(false);\n      })\n      .catch((error) => console.log(\"error\", error));\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Container>\n        <Paper className={classes.paper}>\n          <Grid container spacing={2}>\n            <Grid item xs={6} md=\"auto\">\n              <Button\n                className={classes.button}\n                startIcon={<CloudUpload />}\n                variant=\"contained\"\n                color=\"secondary\"\n                component=\"label\"\n              >\n                Load Image\n                <input\n                  accept=\"image/*\"\n                  type=\"file\"\n                  hidden\n                  // multiple\n                  onChange={handleFileSelected}\n                />\n              </Button>\n            </Grid>\n            <Grid item xs={6} md=\"auto\">\n              <FormControl\n                variant=\"outlined\"\n                color=\"secondary\"\n                className={classes.formControl}\n              >\n                <InputLabel id=\"format-select-label\">\n                  Destination format\n                </InputLabel>\n                <Select\n                  labelId=\"format-select-label\"\n                  id=\"format-select-label\"\n                  value={format}\n                  onChange={handleSelect}\n                  label=\"Destination format\"\n                >\n                  {formats.map((format, index) => (\n                    <MenuItem key={\"formats-\" + index} value={format}>\n                      {format}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} md=\"auto\">\n              <Button\n                className={classes.button}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleConvert}\n                disabled={selectedFiles.length === 0 || isLoading}\n              >\n                Convert\n              </Button>\n            </Grid>\n            {isLoading && (\n              <Grid item xs={12} md=\"auto\">\n                <CircularProgress color=\"secondary\" />\n              </Grid>\n            )}\n            <Grid item xs={12}>\n              <Typography color=\"error\" variant=\"caption\">\n                *Not working correctly with IDM (disable extention)\n              </Typography>\n            </Grid>\n          </Grid>\n          <div className={classes.filesContainer}>\n            {selectedFiles.map((file, index) => {\n              return (\n                <Typography\n                  key={\"files-\" + index}\n                  className={classes.selectedFiles}\n                >\n                  {file.name}\n                </Typography>\n              );\n            })}\n          </div>\n        </Paper>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}